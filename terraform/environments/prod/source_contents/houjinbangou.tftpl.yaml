- init:
    assign:
      - projectId: $${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
      - batchApiUrl: $${"https://batch.googleapis.com/v1/projects/" + projectId + "/locations/us-central1/jobs"}
      - jobId: $${"job-houjinbangou-" + string(int(sys.now()))}
      - bucket: ${bucket}
      - object: ${object}
      - repositoryId: ${repositoryId}
      - location: ${location}
      - workflowId: ${workflowId}
      - arguments:
          includedTags:
            - https://www.houjin-bangou.nta.go.jp/download/zenken/
- createAndRunBatchJob:
    call: http.post
    args:
      url: $${batchApiUrl}
      query:
        job_id: $${jobId}
      headers:
        Content-Type: application/json
      auth:
        type: OAuth2
      body:
        taskGroups:
          taskSpec:
            runnables:
              - container:
                  imageUri: $${location + "-docker.pkg.dev/" + projectId + "/" + repositoryId + "/houjinbangou-latest:latest"}
                environment:
                  variables:
                    BUCKET: $${bucket}
                    OBJECT: $${object}

        allocationPolicy:
          instances:
            - policy:
                machineType: e2-micro
                provisioningModel: SPOT

        logsPolicy:
          destination: CLOUD_LOGGING

- sleep:
    call: sys.sleep
    args:
      seconds: 300
- getJob:
    call: http.get
    args:
      url: $${batchApiUrl + "/" + jobId}
      auth:
        type: OAuth2
    result: getJobResult
- checkState:
    switch:
      - condition: $${getJobResult.body.status.state == "SUCCEEDED"}
        next: createExecution
      - condition: $${getJobResult.body.status.state == "FAILED"}
        raise:
          message: $${"The underlying batch job " + jobId + " failed"}
    next: sleep

- createExecution:
    call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
    args:
      parent: $${workflowId}
      body:
        argument: $${json.encode_to_string(arguments)}
